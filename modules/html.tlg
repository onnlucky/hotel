// TODO to parse html properly, <p>, <li>, <meta> and others need to be closed if new one is opened, now we just nest them
// TODO handle roque closing tags, now they collapse the full tree
// TODO add html escape/unescape for attributes
// TODO node.text should normalize/remove &nbsp; and such entities

tomap = ls ->
    m = HashMap.new
    ls.each: e -> if e: m.set(e.k, e.v)
    return m

parseHtml = parser {
   start: (.(dir|comment))* s=(.toplevel)*. -> dom.Node.new("doc", s)

toplevel: node
        | text
        | "<". (!">" _)* ">"     -> null

    name: ns=(![ <>=/] _)+       -> ns.toChar

    text: ts=(![<] _)+           -> ts.toChar.strip
     sub: ns=(.node|text)*       -> ns
        | . -> []

    attr: k=name ."="."\"" v=(!["] _)* "\"" -> { k: k, v: v.toChar }
        | k=name ."="."'"  v=(!["] _)* "'"  -> { k: k, v: v.toChar }
        | k=name ."=".     v=name           -> { k: k, v: v }
        | k=name . !"\"" !"'"               -> { k: k, v: true }
        | (!"/" !">" !name _)+              -> null
   attrs: as=(.attr)* -> tomap(as)

 comment: "<"."!"."--" (!"-"."-".">" _)* "-"."-".">" -> null
     dir: "<"."!" (!">" _)* ">"                      -> null
  script: "<"."script".a=attrs.">" ts=(!"</script" _)* "</script".attrs.">" -> dom.Node.new("script", ts.toChar, a)
   style: "<"."style".a=attrs.">"  ts=(!"</style"  _)* "</style".attrs.">"  -> dom.Node.new("style", ts.toChar, a)

    node: comment | dir | script | style
        | "<".n=name.a=attrs."/".">"                                          -> dom.Node.new(n, null, a)
        | "<".n=name.a=attrs.">" s=sub "<"."/".m=name ?(n == m) (!">" _)* ">" -> dom.Node.new(n, s, a)
        | "<".n=name.a=attrs.">" s=sub . &("<"|!_)                            -> dom.Node.new(n, s, a)
        | "<". !"/" (!">" _)* ">"                                             -> null
//        | "<"."/".m=name ?(notinstack(m) (!">" _)* ">"                        -> null

}

{ parse: parseHtml }

